#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass ctex-article
\begin_preamble
\usepackage{listings}
\usepackage{xcolor}
\usepackage{hyperref}
\ctexset{
    part={
        titleformat=\raggedright,
        name={第,章},
        number=\chinese{part}
    }
}
\end_preamble
\options UTF8
\use_default_options true
\maintain_unincluded_children false
\language chinese-simplified
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "Songti TC"
\font_sans "default" "Songti TC"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 1
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize 12
\spacing onehalf
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3.6cm
\topmargin 2.6cm
\rightmargin 3.6cm
\bottommargin 2.6cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
date{}
\end_layout

\end_inset


\end_layout

\begin_layout Title

\series bold
2019 年全国大学生信息安全竞赛
\begin_inset Newline newline
\end_inset

作品报告
\end_layout

\begin_layout Standard
\begin_inset VSpace 5cm*
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size larger
作品名称：
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size larger
基于深度学习的抗屏摄文档水印技术
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size larger
电子邮箱：
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size larger
hustcw1998@gmail.com
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size larger
提交日期：
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size larger
2019年5月29日
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\align center

\series bold
填写说明
\end_layout

\begin_layout Enumerate
所有参赛项目必须为一个基本完整的设计。作品报告书旨在能够清晰准确地阐述（或图示）该参赛队的参赛项目（或方案）。
\end_layout

\begin_layout Enumerate
作品报告采用A4纸撰写。除标题外，所有内容必需为宋体、小四号字、1.5倍行距。
\end_layout

\begin_layout Enumerate
作品报告中各项目说明文字部分仅供参考，作品报告书撰写完毕后，请删除所有说明文字。(本页不删除)
\end_layout

\begin_layout Enumerate
作品报告模板里已经列的内容仅供参考，作者可以在此基础上增加内容或对文档结构进行微调。
\end_layout

\begin_layout Enumerate
为保证网评的公平、公正，作品报告中应避免出现作者所在学校、院系和指导教师等泄露身份的信息。
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagestyle{plain}
\end_layout

\begin_layout Plain Layout


\backslash
setcounter{page}{1}
\end_layout

\begin_layout Plain Layout


\backslash
part*{摘要}
\end_layout

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{section}{摘要} 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
随着商业化进程加速，商业机密泄露事件频繁出现，导致泄密溯源技术愈发重要。对泄密溯源技术的需求是随着多媒体的技术发展不断增强的，智能手机的拍摄就对泄密溯源技术带来
新的挑战。
\end_layout

\begin_layout Standard
针对文档溯源问题，本作品提出在中文文档中进行高不可见性、高鲁棒性文档水印的关键技术，并实现了一个原型系统来演示其效果。水印通过编码不同类型的文字进行嵌入，这就要
求我们需要拥有至少两种类型的文字进行编码。为了达到视觉上的不可见性，我们选择了两种视觉上不可区分的两类字体，并通过众包技术进行相似度衡量，以确保文字的相似性，从
而实现编码消息的不可见性。而为了区分这两种字体，同时抵抗屏摄信道对字体识别的干扰，我们设计了一种网络结构并通过对抗训练的方式实现不同字体的高识别率。同时我们还编
写了微信小程序以更好更完整的展示这一系统。
\end_layout

\begin_layout Standard
系统演示了算法对屏摄泄密文档的溯源能力，但算法的能力不仅限于屏摄信道，对其他泄密信道也具有很强的溯源能力。
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Part
作品概述
\end_layout

\begin_layout Section
研究背景
\end_layout

\begin_layout Standard
随着信息化时代的到来，电子文档成为日常办公文档的主要形式。目前对于重要文件的泄密问题主要还是依靠传统的方案来解决，通过加密，访问控制，身份认证等手段对电子文档进
行保护。但是随着智能手机的普及，文档的泄密仅需在屏幕上展示文档，用手机拍摄文档两步即可完成，且拍照的行为本身不易被监控，所以我们需要在文档中嵌入水印来保证文档的
可溯源性，从而保护文档的知识产权。传统的文档水印主要针对图像处理过程，在经过屏摄信道后，嵌入的消息很难被无损的恢复，也就无法保证屏摄泄密的可溯源性。这使得设计一
种可以抵抗屏摄过程的文档水印方案势在必行。
\end_layout

\begin_layout Standard
针对文档的抗屏摄水印技术可以将屏幕编号和时间戳嵌入到文档中。在文件因拍照泄漏后，我们可以在屏摄图片中提取出嵌入的设备编号和时间戳信息找到泄密的设备及泄密时间，从
而缩小泄密的排查范围，起到溯源的作用。因此，研究此项技术有着迫切的需求与极大的价值。
\end_layout

\begin_layout Standard
本算法以中文这一广泛使用的象形文字为基础进行嵌入设计，不同的字形表示了不同的比特的消息，通过选择不同字形的字体，实现消息的嵌入。即使经过了屏摄处理之后，象形文字
的字体信息仍然可以保留。为了实现水印的不可见性，文档应用肉眼不可区分的多种字体构成。准确识别本身非常相近的字体是一个难点，特别是在经过屏摄处理之后。因为屏摄信道
会使字形信息产生大量失真。这一问题难以使用传统的算法进行解决，因此本作品使用深度学习技术构建了学习能力足够强的神经网络，同时拍摄了大量的训练数据来增强网络的泛化
能力。结合识别字体的神经网络和带有纠错能力的编码方案，本系统实现的字体编码文档水印技术可以大幅增强抗屏摄能力。
\end_layout

\begin_layout Section
相关工作
\end_layout

\begin_layout Standard
我们的工作基于Chang et .al
\begin_inset CommandInset citation
LatexCommand cite
key "xiao2018fontcode"
literal "false"

\end_inset

：利用英文字体的细微差别在文档中进行信息隐藏。相比于Chang et .al
\begin_inset CommandInset citation
LatexCommand cite
key "xiao2018fontcode"
literal "false"

\end_inset

，我们有以下三个方面改进。第一个方面，Chang et .al
\begin_inset CommandInset citation
LatexCommand cite
key "xiao2018fontcode"
literal "false"

\end_inset

是基于英文字母的字体差别进行的信息隐藏。英文字母只有26个，然而我们进行的中文字水印需要识别的常用字就有3000及以上。这对我们的神经网络识别能力提出了非常高的
要求，在采集训练集时数据量也会大大增加。第二个方面，中文字体和英文在字形上有很大不同。考虑到中文字体有偏旁部首（整个字体不是连通的），分割取字也变得更有难度。第
三个方面，我们是对屏幕上显示的文档拍照进行识别。在屏摄过程中产生的失真、摩尔纹、噪点等都会大大影响神经网络模型的识别率。
\end_layout

\begin_layout Paragraph
编码字体的选择
\end_layout

\begin_layout Standard
我们的字体编码工作需要选择字形相似且不易被人察觉出差异的字体。目前有很多种选择字体的方法。近来，众包技术
\begin_inset CommandInset citation
LatexCommand cite
key "o2014exploratory"
literal "false"

\end_inset

以及提取相似度
\begin_inset CommandInset citation
LatexCommand cite
key "loviscach2010universe"
literal "false"

\end_inset

经常被使用。考虑到我们的系统只需要验证方案的可行性。我们在之前的已有的技术上做了改进，只选择部分可行字体进行实现，并使用众包技术验证字体的不可区分性。
\end_layout

\begin_layout Paragraph*
支持拍照后的字体识别
\end_layout

\begin_layout Standard
由于拍照会导致原本文档中的信息流失，大部分的水印技术都无法有效的抵抗屏摄信道带来的失真。Jiren et .al
\begin_inset CommandInset citation
LatexCommand cite
key "zhu2018hidden"
literal "false"

\end_inset

提出了一种能够抵抗屏摄过程的图像水印算法，这与我们拍照后识别字体具有很大的相似度。但是，图像水印与字体水印还是有本质的差异。图像水印可以将水印信息置于整张图片中
（大部分是一个规则的矩形），水印面积更大，也更易识别水印区域。我们的字体水印识别别区域仅在字体本身，水印面积很小，每个字体的识别区域也不同。
\end_layout

\begin_layout Standard
之前也有很多识别图片中字体的工作，如Carlos Avilés-Cruz 2015
\begin_inset CommandInset citation
LatexCommand cite
key "aviles2005high"
literal "false"

\end_inset

——使用静态方法提取字体特征进行识别。进来，神经网络与深度学习技术崛起兴盛，使用神经网络识别字体的技术越来越多，而且效果都非常好。Chen et
 .al
\begin_inset CommandInset citation
LatexCommand cite
key "chen2014large"
literal "false"

\end_inset

中就提出了一种规模可变的监督学习方法。随后Wang et .al
\begin_inset CommandInset citation
LatexCommand cite
key "wang2015deepfont"
literal "false"

\end_inset

提出使用CNN识别字体的方案。我们的识别方法也运用了神经网络，并将CNN作为核心的一环。最终搭建的网络模型使用了一种效果非常好的图片分类模型 ——He
 et .al
\begin_inset CommandInset citation
LatexCommand cite
key "he2016deep"
literal "false"

\end_inset

。我们调整了模型的部分细节和参数以适应于整个任务。
\end_layout

\begin_layout Paragraph
在文档中添加水印信息
\end_layout

\begin_layout Standard
我们的工作与水印技术相关。各种载体上（图像、光照、音频、视频）的水印技术都被研究了多年。但是基于文档中文字的水印更有挑战性，目前较为成熟的水印方案也比较少。我们
在这里列出几种现有的文档中水印信息的方案。
\end_layout

\begin_layout Standard
第一种方案是cover text generation CTG，wayner et .al
\begin_inset CommandInset citation
LatexCommand cite
key "wayner1992mimic"
literal "false"

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "wayner2009disappearing"
literal "false"

\end_inset

。这种方案生成一种语法和句法上非常自然的文档，在词句之中隐藏信息。这种方案的缺点也是非常明显的——它不能给定文档添加水印。
\end_layout

\begin_layout Standard
第二种方案是黄兴 2013
\begin_inset CommandInset citation
LatexCommand cite
key "黄兴2013抗打印扫描的文本数字水印技术研究"
literal "false"

\end_inset

，将字体边缘的像素翻转来进行编码。这种方案的缺点在于信息流失的可能性太大，特别是在屏摄后能识别出水印信息的概率非常小。而且，如果采用这种方法，对所有格式文档适应
的成本也非常高。
\end_layout

\begin_layout Standard
第三种方案利用了文档格式上的特征，例如改变文字大小、颜色、下划线等特征
\begin_inset CommandInset citation
LatexCommand cite
key "panda2015text"
literal "false"

\end_inset

。这种方案可以大大提高识别的准确度，但是没有保证水印的不可见性。
\end_layout

\begin_layout Paragraph
水印信息的编码解码
\end_layout

\begin_layout Standard
由于编码所采用的字体差别非常小，在屏摄过后字体差别会更小，神经网会有一定概率识别出错。在这种情况下，使用纠错码是非常有必要的。我们使用了BCH(127,50)
\begin_inset CommandInset citation
LatexCommand cite
key "bose1960class"
literal "false"

\end_inset

。该编码算法能允许48比特内出5比特错,即网络允许的BER为10%。只要我们的神经网络识别错误率在BCH编码允许内，就能完整的还原水印的信息。最终，我们的网络确
实达到了要求，能够还原出水印信息。
\end_layout

\begin_layout Section
特色描述
\begin_inset CommandInset label
LatexCommand label
name "sec:特色描述"

\end_inset


\end_layout

\begin_layout Subsection
产品特色
\end_layout

\begin_layout Standard
本作品实现了抗屏摄的文档字体水印技术。随着照相技术的普及，抗屏摄已经成为水印技术的重大难点。传统水印处理过的文档在通过屏摄、拍照处理后，会出现严重的失真，无法还
原出正确的水印信息。针对现有算法无法解决的这一难点问题，本作品创新性的使用了两种肉眼不可区分的字体作为作为信息载体表达不同消息，通过预编码的消息选择对应的字体生
成文档从而实现消息的嵌入。而在水印提取端，通过深度学习训练分类网络来实现不同字体的识别与分类，完成消息的解码。由于深度学习能学到更高级的特征，这意味着在失真严重
的屏摄图片中，运用神经网络仍然能提取出分类器所需要的特征进行信息的分类与还原。因此本作品的水印方案能够很好地解决屏摄后信息丢失的问题，即无损地从手机拍摄的水印文
档的图片中还原出原始信息。
\end_layout

\begin_layout Subsection
核心算法特色
\end_layout

\begin_layout Standard
深度学习数据集是深度学习最为重要的组成部分，我们分析了多种字符之间的相似性，并选定了两种字符集进行多角度拍摄，矫正、切割、制作了大量的数据集进行模型训练，在识别
屏射后的字体上取得了很高的训练精度。在准确识别字体的基础上，根据测试得到的误码率选择了合适的纠错编码方案，达到了准确恢复水印信息的效果。为了演示字体识别的准确性
，本作品设定了一个易于处理的文档布局方式，并基于该布局方式实现了文档区域识别和单个文字分割，字体识别准确率达到了92.5%，结合BCH纠错码可以准确恢复水印信息。
\end_layout

\begin_layout Standard
我们核心的特色有以下四点：
\end_layout

\begin_layout Enumerate
字形的选择：
\end_layout

\begin_deeper
\begin_layout Standard
通过问卷调查，我们筛选出了人眼难以区分的两种字体用于信息编码。一方面，使用难以区分的字体能够使得水印对文档的视觉效果的影响尽可能小；另一方面，难以区分的字体可以
用于测试字体识别算法的识别能力，从而验证其有效性。
\end_layout

\end_deeper
\begin_layout Enumerate
数据集的制作：
\end_layout

\begin_deeper
\begin_layout Standard
文档在经过手机拍摄后不可避免的会出现各种噪点、模糊的情况。以及因为拍摄距离和拍摄角度等影响，拍摄过后的文档文字上还会出现摩尔纹或产生畸变。我们设计并且实现了畸变
矫正算法，并且在采集训练数据的过程中制造了各种环境情况，保证了神经网络的泛化能力足够抵抗大多数的屏摄情况。
\end_layout

\end_deeper
\begin_layout Enumerate
深度神经网络的设计：
\end_layout

\begin_deeper
\begin_layout Standard
采用人眼很难分辨的字体编码信息，需要网络有足够学习能力提取出不同字体的特征。我们设计并且不断改善网络的结构，针对于大量的数据集不断训练增强模型的分类能力。图片的
背景颜色和环境因素都会对神经网络的识别特征造成干扰，我们设计并实现了减少背景颜色和噪点等因素影响的数据预处理方案。
\end_layout

\end_deeper
\begin_layout Enumerate
水印编码方法的设计：
\end_layout

\begin_deeper
\begin_layout Standard
文档水印需要保障信息的完整性，所以必须选择有很强的纠错功能的编码方案。我们使用 BCH 编码方案对水印信息进行编码，从而保证即使在字体识别出现错误的情况下仍然能
够准确提取水印信息。
\end_layout

\end_deeper
\begin_layout Enumerate
微信客户端的实现：
\end_layout

\begin_deeper
\begin_layout Standard
为了演示这一系统的功能，我们实现了一个微信客户端小程序，用户通过该小程序提交文档、查看水印信息。
\end_layout

\end_deeper
\begin_layout Section
应用前景分析
\end_layout

\begin_layout Subsection
文档溯源
\end_layout

\begin_layout Standard
在政府及企业部门中，文档的保密性始终是一个重要的问题，机密文档的泄露将威胁企业及国家的安全，带来极大的风险。
\end_layout

\begin_layout Standard
传统的防止文档泄密的方案主要是从源头避免文档的泄露，对于重要文件的打印，可以采用限制打印、复印次数，或指定专人负责，以进行保密，打印文档时需要经过批准，审批，登
记等步骤，并定期对纸质文档进行销毁或归档处理。对于重要的电子文档往往采用访问控制、身份认证等手段进行保护。
\end_layout

\begin_layout Standard
尽管有这些保密措施，但在用户获得文档的副本后，其去向就难以控制，信息泄露的风险加大。当文档泄露后，如果能定位文档泄露源头并对其进行管控、跟踪和追责，就可以及时避
免更大的损失。但随着智能手机的普及，传统的方案已经不能解决屏摄泄密的问题。因此，对文档进行可溯源的处理有着迫切的需求与极大的价值。
\end_layout

\begin_layout Standard
要使文档可溯源，就要向其中加入水印。但是随着智能手机的普及，手机拍摄成为一种高危险的泄密方式。原始文档在屏摄处理后会造成大量失真，因此传统的水印信息无法保留。抗
屏摄的文档水印技术可以在屏摄过后的图片中恢复出原始的水印信息，文件泄露的图片被捕获后，通过水印信息即可对文档泄密源头进行管控追踪。因此研究这项技术有着极大的价值
。
\end_layout

\begin_layout Subsection
信息推送
\end_layout

\begin_layout Standard
在商业宣传和海报制作中，设计者往往会在其作品上添加二维码来方便用户获取详细信息，但是二维码形态相对固定，对作品的整体效果有一定的影响，因此在实际使用时人们往往会
为其加上多样的形态进行美化。如果能够在艺术宣传作品的文字中直接嵌入网站链接等信息，就能够免去二维码，增加信息维度，从而使设计更加美观而富有科技感。
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Part
作品设计与实现
\end_layout

\begin_layout Section
系统设计
\end_layout

\begin_layout Standard
在核心算法的基础上，我们设计和实现了一个简单的原型系统用以展示我们的文档水印技术。
\end_layout

\begin_layout Subsection
使用流程
\end_layout

\begin_layout Subsubsection
文档发布
\end_layout

\begin_layout Standard
当用户需要发布一份带水印的文档时，首先将文档原文和水印信息提交至本系统，由本系统生成带有水印的文档，然后用户获取该文档，进行后续的处理和使用。
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/doc-pub-steps.bmp
	width 14cm

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
文档发布流程图。
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
信息提取
\end_layout

\begin_layout Standard
当用户需要从带有水印的文档中恢复信息时，首先对文档进行拍照或扫描以得到电子版本，然后将该电子版本提交至系统，系统分析出水印内容后反馈呈现给用户。
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/doc-read.bmp
	width 14cm

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
水印提取流程图。
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
系统架构
\end_layout

\begin_layout Standard
我们的原型系统使用服务端-客户端架构。如下图所示：
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/sys-arch.bmp
	width 10cm

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
系统架构图。
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
服务端
\end_layout

\begin_layout Standard
文档水印和提取的核心算法部署在服务端，此外，服务端含有图片文档切割、矫正、字符切分算法以及与客户端通信的功能。
\end_layout

\begin_layout Paragraph
客户端
\end_layout

\begin_layout Standard
向用户提供方便地与系统进行交互的接口，用户通过客户端获取文档、从文档中读取水印信息。客户端以多种形式呈现，包括 Web 页面、微信小程序、手机
 App 等，本作品的演示系统中以微信小程序的形式提供客户端界面。
\end_layout

\begin_layout Section
功能模块
\end_layout

\begin_layout Subsection
文档生成模块
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/generator.png
	width 15cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
文档生成流程。
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
用户选择需要嵌入的信息(url)和嵌入的文档内容。以二进制为例，模块对信息(url)进行`0/1‘编码, 将得到的`0/1’比特串进行BCH纠错编码得到最终的比
特串。文档生成器通过串中的0和1分别选择两种字体，按照顺序来生成符合内容要求的文档。
\end_layout

\begin_layout Subsection
信息恢复模块
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/recognize-flow-graph.png
	width 8cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
信息恢复流程。
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
信息恢复模块由客户端和服务器端两部分组成。客户端负责上传含有水印的文档的图片。服务器端负责将客户端上传的图片进行处理，最终将解码所得的隐藏信息返回给客户端。
\end_layout

\begin_layout Standard
客户端是一个微信小程序，它能允许用户选择相机拍摄上传或选择相册中图片上传。
\end_layout

\begin_layout Standard
服务器端对照片进行畸变校正等预处理，形成我们需要的字体排列形式。然后对矫正过后的图片按照设定的文档规格进行切分，得到一张张单个文字图片。最终，将这些单个字体文件
按照顺序输入神经网络分类器中进行分类，按照字体类别得到`0/1'比特串。将比特串输入BCH解码器解码后，恢复原有信息。
\end_layout

\begin_layout Section
技术实现
\end_layout

\begin_layout Subsection
文档生成算法
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/doc-gen.png
	width 15cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
文档生成算法流程
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
该算法的核心是一个信息获取器和文档生成器。根据输入的比特是0还是1，来选择生成文档中对应文字的字体。`0
\backslash
1'比特串输入结束后，文档生成器将结果显示出来。
\end_layout

\begin_layout Subsection
图像矫正算法
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/image-fix.png
	width 15cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
图片矫正算法。
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
该算法将输入的照片依次进行如下操作：图片灰度化、 阈值二值化、检测轮廓、寻找轮廓的包围矩阵。获取角度，根据角度进行旋转矫正。随后对旋转后的图像进行轮廓提取，裁剪
出轮廓内的图像区域，成为一张独立图像。本算法采用连通域识别的方法：识别文档照片的边框, 并根据边框的位置进行几何矫正，最后得到矫正后的图片。
\end_layout

\begin_layout Subsubsection
连通域识别
\end_layout

\begin_layout Standard
在图像中，最小的单位是像素，每个像素周围有8个邻接像素，常见的邻接关系有2种：4邻接与8邻接。4邻接一共4个点，即上下左右，如下左图所示。8邻接的点一共有8个，
包括了对角线位置的点，如下右图所示。
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/connectspace1.png

\end_inset


\begin_inset space \hspace{}
\length 1cm
\end_inset


\begin_inset Graphics
	filename figures/connectspace2.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
连通域示例。
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
如果像素点A与B邻接，我们称A与B连通，于是我们有如下的结论： 如果A与B连通，B与C连通，则A与C连通。在视觉上看来，彼此连通的点形成了一个区域，而不连通的点
形成了不同的区域。这样的一个所有的点彼此连通点构成的集合，我们称为一个连通区域。下面这符图中，如果考虑4邻接，则有3个连通区域；如果考虑8邻接，则有2个连通区域
。（注：图像是被放大的效果，图像正方形实际只有4个像素）。
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/connectspace3.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
连通域示例。
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
连通区域分析是指将图像中的各个连通区域找出并标记。
\end_layout

\begin_layout Standard
连通区域分析是一种常用和基本的方法。例如：OCR识别中字符分割提取（车牌识别、文本识别、字幕识别等）、视觉跟踪中的运动前景目标分割与提取（行人入侵检测、遗留物体
检测、基于视觉的车辆检测与跟踪等）、医学图像处理（感兴趣目标区域提取）等等。也就是说，在需要将前景目标提取出来以便后续进行处理的应用场景中都能够用到连通区域分析
方法，通常连通区域分析处理的对象是一张二值化后的图像。
\end_layout

\begin_layout Standard
具体的算法如下:
\end_layout

\begin_layout Enumerate
记图像为B， 
\begin_inset Formula $(x,y)$
\end_inset

为像素位置，扫描图像，直到当前像素点
\begin_inset Formula $B(x,y)=1$
\end_inset

：
\end_layout

\begin_deeper
\begin_layout Enumerate
将
\begin_inset Formula $B(x,y)$
\end_inset

作为种子（像素位置），并赋予其一个label，然后将该种子相邻的所有前景像素都压入栈中；
\end_layout

\begin_layout Enumerate
弹出栈顶像素，赋予其相同的label，然后再将与该栈顶像素相邻的所有前景像素都压入栈中；
\end_layout

\begin_layout Enumerate
重复b步骤，直到栈为空；
\end_layout

\begin_layout Standard
此时，便找到了图像B中的一个连通区域，该区域内的像素值被标记为label；
\end_layout

\end_deeper
\begin_layout Enumerate
重复第（1）步，直到扫描结束；
\end_layout

\begin_layout Enumerate
扫描结束后，就可以得到图像B中所有的连通区域
\end_layout

\begin_layout Subsubsection
几何校正
\end_layout

\begin_layout Standard
仿射变换和透视变换更直观的叫法可以叫做「平面变换」和「空间变换」或者「二维坐标变换」和「三维坐标变换」,一个是二维坐标（x,y），一个是三维坐标（x,y,z）。
也就是：
\end_layout

\begin_layout Enumerate
仿射变换：
\begin_inset Formula 
\begin{equation}
\left(\begin{array}{l}
{x}\\
{y}
\end{array}\right)=\left(\begin{array}{lll}
{a_{11}} & {a_{12}} & {b_{1}}\\
{a_{21}} & {a_{22}} & {b_{2}}
\end{array}\right)\left(\begin{array}{l}
{u}\\
{v}\\
{1}
\end{array}\right)
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\begin{array}{l}
{x=a_{11}u+a_{12}v+b_{1}}\\
{y=a_{21}u+a_{22}v+b_{2}}
\end{array}
\end{equation}

\end_inset


\end_layout

\begin_layout Enumerate
透视变换：
\begin_inset Formula 
\begin{equation}
\left(\begin{array}{l}
{x}\\
{y}\\
{z}
\end{array}\right)=\left(\begin{array}{lll}
{a_{11}} & {a_{12}} & {a_{13}}\\
{a_{21}} & {a_{22}} & {a_{23}}\\
{a_{31}} & {a_{32}} & {a_{33}}
\end{array}\right)\left(\begin{array}{l}
{u}\\
{v}\\
{1}
\end{array}\right)
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\begin{array}{l}
{x=a_{11}u+a_{12}v+a_{13}}\\
{y=a_{21}u+a_{22}v+a_{23}}\\
{z=a_{31}u+a_{32}v+a_{33}}
\end{array}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\begin{array}{l}
{x=a_{11}u+a_{12}v+a_{13}}\\
{y=a_{21}u+a_{22}v+a_{23}}\\
{z=a_{31}u+a_{32}v+a_{33}}
\end{array}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
x^{\prime}=\frac{x}{z}=\frac{a_{11}u+a_{12}v+a_{13}}{a_{31}u+a_{32}v+a_{33}}=\frac{k_{11}u+k_{12}v+k_{13}}{k_{31}+k_{32}v+1}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
y^{\prime}=\frac{y}{z}=\frac{a_{21}u+a_{22}v+a_{23}}{a_{31}u+a_{32}v+a_{33}}=\frac{k_{21}u+k_{22}v+k_{23}}{k_{31}+k_{32}v+1}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
摄像机就相当于透视中心，摄像机和荧幕之间就是像点的集合，荧幕上展示的就是目标点集合； 中心点和某一像点的连线和荧幕的交点就是这个像点的目标点；像点
\begin_inset Formula $(x,y)$
\end_inset

和目标点
\begin_inset Formula $(s,t)$
\end_inset

是一一对应的关系，我们可以使用一个[3x3]的矩阵
\begin_inset Formula $A$
\end_inset

描述他们之间的映射关系：
\begin_inset Formula $[s,t,1]T=dot(A,[x,y,1]T)$
\end_inset

 --- A矩阵乘
\begin_inset Formula $(x,y)$
\end_inset

的齐次坐标的转置就是
\begin_inset Formula $(s,t)$
\end_inset

的齐次坐标的转置，每一个透视变换都对应着特定的变换矩阵
\begin_inset Formula $A$
\end_inset

。
\end_layout

\begin_layout Subsection
字符切割算法
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/char-seg.png
	width 5cm
	height 10cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
字符切分流程。
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Tesseract 介绍
\end_layout

\begin_layout Standard
Tesseract是Ray Smith于1985到1995年间在惠普布里斯托实验室开发的一个OCR引擎，曾经在1995 UNLV精确度测试中名列前茅。但1996
年后基本停止了开发。2006年，Google邀请Smith加盟，重启该项目。目前项目的许可证是Apache 2.0。该项目目前支持Windows、Linux和Ma
c OS 等主流平台。但作为一个引擎，它只提供命令行工具。
\end_layout

\begin_layout Subsubsection
算法过程
\end_layout

\begin_layout Standard
信息恢复模块中, 输入照片校正后, 使用tesseract 对矫正后的照片进行切分, 然后逐个识别, 如果是标点符号则直接丢弃, 如果是中文字,
 则识别后判断是否在我们的编码字符库中, 如果不在也丢弃, 最后对切分之后的字符图片按照顺序保存, 并输入到神经网络进行分类和解码。
\end_layout

\begin_layout Subsection
BCH编解码算法
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/bchcodec.png
	width 14cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
BCH编解码算法。
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
构建
\end_layout

\begin_layout Standard
BCH 码使用有限域上的域论与多项式。为了检测错误可以构建一个检测多项式，这样接收端就可以检测是否有错误发生。要构建一个能够检测、校正两个错误的
 BCH 码，我们要使用有限域 
\begin_inset Formula $GF(16)$
\end_inset

 或者 
\begin_inset Formula $Z^{2}[x]／\left(x^{4}+x+1\right)$
\end_inset

。如果 
\begin_inset Formula $α$
\end_inset

 是 
\begin_inset Formula $m_{1}(x)=x^{4}+x+1$
\end_inset

 的一个根，那么 
\begin_inset Formula $m_{1}$
\end_inset

 就是 
\begin_inset Formula $α$
\end_inset

 的极小多项式，这是因为
\begin_inset Formula $m_{1}(x)=(x-α)(x-α^{2})(x-α^{4})(x-α^{8})=x^{4}+x+1$
\end_inset

。如果要构建一个能够纠正一个错误的 BCH 码，那么就使用 
\begin_inset Formula $m_{1}(x)$
\end_inset

，这个代码就是所有满足
\begin_inset Formula $C(x)\equiv0\ mod\ m_{1}(x)$
\end_inset

且根为 
\begin_inset Formula $α,α^{2},α^{4},α^{8}$
\end_inset

 的多项式 
\begin_inset Formula $C(x)$
\end_inset

。
\end_layout

\begin_layout Subsubsection
解码算法
\end_layout

\begin_layout Standard
解码算法如下所示
\end_layout

\begin_layout Enumerate
首先生成 
\begin_inset Formula ${\displaystyle 2t}$
\end_inset

 伴随矩阵 然后生成元素为 
\begin_inset Formula ${\displaystyle S_{t\times t}={\begin{bmatrix}s_{1} & s_{2} & s_{3} & ... & s_{t}\\
s_{2} & s_{3} & s_{4}... & ... & s_{t+1}\\
s_{3} & s_{4} & s_{5} & ... & s_{t+2}\\
... & ... & ... & ... & ...\\
s_{t} & s_{t+1} & s_{t+2} & ... & s_{2t-1}
\end{bmatrix}}}的矩阵{\displaystyle S_{txt}}$
\end_inset


\end_layout

\begin_layout Enumerate
生成元素为 
\begin_inset Formula ${\displaystyle C_{t\times1}={\begin{bmatrix}s_{t+1}\\
s_{t+2}\\
...\\
...\\
s_{2t}
\end{bmatrix}}}$
\end_inset

 的矩阵 
\begin_inset Formula ${\displaystyle c_{tx1}}$
\end_inset


\end_layout

\begin_layout Enumerate
让 
\begin_inset Formula ${\displaystyle \Lambda}表示未知的多项式系数，用{\displaystyle \Lambda_{t\times1}={\begin{bmatrix}\lambda_{t}\\
\lambda_{t-1}\\
...\\
\lambda_{3}\\
\lambda_{2}\\
\lambda_{1}
\end{bmatrix}}}$
\end_inset

表示
\end_layout

\begin_layout Enumerate
这样就得到矩阵方程
\begin_inset Formula ${\displaystyle S_{t\times t}\Lambda_{t\times1}=C_{t\times1}}$
\end_inset


\end_layout

\begin_layout Enumerate
如果矩阵 
\begin_inset Formula ${\displaystyle S_{t\times t}}$
\end_inset

存在行列式，那么我们就可以找到这个矩阵的逆，然后就可以得到 
\begin_inset Formula ${\displaystyle \Lambda}$
\end_inset

的值 如果 
\begin_inset Formula ${\displaystyle det(S_{t\times t})=0}$
\end_inset

，那么按照以下运算法则进行计算
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
if 
\begin_inset Formula ${\displaystyle t=0}$
\end_inset


\end_layout

\begin_layout Plain Layout
then declare an empty error locator polynomial
\end_layout

\begin_layout Plain Layout
stop Peterson procedure.
\end_layout

\begin_layout Plain Layout
end
\end_layout

\begin_layout Plain Layout
set 
\begin_inset Formula ${\displaystyle t\leftarrow t-1}$
\end_inset


\end_layout

\begin_layout Plain Layout
continue from the beginning of Peterson's decoding
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
在 
\begin_inset Formula ${\displaystyle \Lambda}$
\end_inset

的值确定之后，自然就得到错误定位多项式
\end_layout

\begin_layout Enumerate
结束
\end_layout

\begin_layout Subsection
网络模型训练
\end_layout

\begin_layout Subsubsection
网络结构
\end_layout

\begin_layout Standard
网络中主要结构来自于ResNet18
\begin_inset CommandInset citation
LatexCommand cite
key "he2016deep"
literal "false"

\end_inset

。网络结构中有很多block组成，每个block的构成如下图所示：
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/cancha.jpg
	width 50line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
残差单元。
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
网络使用残差单元作为block。假设设输入为
\begin_inset Formula $x$
\end_inset

，传统网络单元的输出为
\begin_inset Formula $H\left(x\right)$
\end_inset

，那么残差单元的输出为：
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
F(x)=H\left(x\right)-x\text{，}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
引入残差后的映射对输出的变化更敏感，所以效果更好。残差的思想是去掉相同的主体部分，从而突出微小的变化。网络整体结构如下图所示：
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/resnet.png
	width 90line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
神经网络模型。
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
训练数据
\end_layout

\begin_layout Standard
神经网络的训练需要足量的数据，否则会出现欠拟合（Underfitting）的问题。目前并没有符合本作品需求的中文字体数据集，因此本小组选择自己制造训练和测试用的
数据。由于需要多种字体数据进行训练和测试，下面的步骤针对每种字体重复进行：
\end_layout

\begin_layout Paragraph
生成文档
\end_layout

\begin_layout Standard
首先需要批量化地生成“文档”。为了简化与关键技术关系不大的部分，本小组使用了简单的规则生成“文档”来解决下述问题，以方便文档矫正和文字切割，针对更复杂的文档格式
、布局的处理不在本次作品的研究范围内。
\end_layout

\begin_layout Standard
文档格式设计规则如下：
\end_layout

\begin_layout Enumerate
对于任意指定的文档，从中分割出所有汉字并不容易，因此规定简单文档格式每一页的文字行数、列数固定，且不含非汉字字符，如标点、空格、英文字母等；
\end_layout

\begin_layout Enumerate
文档在屏幕上显示时，边界有时不容易确定，因此在每页文档周边加一个黑色边框；
\end_layout

\begin_layout Enumerate
文档从屏幕或纸张上被拍照后，其页面边界会有一些影响文档边界自动识别的因素，导致边界出现微小偏移，为了降低其对切割出的文字的影响，在文字与文字之间加入一定大小的空
白。
\end_layout

\begin_layout Standard
下图是一页文档的示例：
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/before-fix.jpg
	lyxscale 10
	width 10cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
屏摄文档示例。
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
屏幕拍照
\end_layout

\begin_layout Standard
考虑到用户在拍照时，光照、拍照角度、显示文档的屏幕等因素都很难确定，在制作训练数据时体现出这样的多样性才能使训练出的网络模型具有较好的泛化能力，因此制作训练数据
时我们做了以下的变化：
\end_layout

\begin_layout Enumerate
从多个角度拍照；
\end_layout

\begin_layout Enumerate
变化背景光照、屏幕亮度拍照；
\end_layout

\begin_layout Enumerate
使用不同的屏幕进行拍照；
\end_layout

\begin_layout Enumerate
从不同的距离拍照。
\end_layout

\begin_layout Paragraph
文档矫正
\end_layout

\begin_layout Standard
使用传统算法进行边界识别，然后做透视畸变矫正，得到照片中的文档区域，对于“生成文档”中所示图片，矫正后得到下图：
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/after-fix.jpg
	width 8cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
矫正后的文档示例。
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
文字切割
\end_layout

\begin_layout Standard
在矫正后的图像上按照预定的行列数进行均等划分，得到一个一个字的图像。
\end_layout

\begin_layout Paragraph
网络训练
\end_layout

\begin_layout Standard
将切分好的图像处理为神经网络能接受的格式，随机输入进神经网络，利用BP算法进行训练。在参数选择上，我们选择batch size为64，epoch为12，学习率为
0.001。我们选用CrossEntropy作为损失函数，SGD作为优化器算法。
\end_layout

\begin_layout Standard
在学习过程中，我们每个minibatch（400个batch）计算一次训练集loss和accuracy。某一次训练的结果如下图所示：
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/loss graph of train dataset.png
	height 4.5cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
训练集loss，
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{}
\length 0.5cm
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/accuracy graph of train dataset .png
	height 4.5cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
训练集accuracy。
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
训练集结果。
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
每个epoch计算一次测试集loss和accuracy，结果如下图所示：
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/loss graph of test dataset.png
	height 4.5cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
测试集loss，
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/accuracy graph of test dataset.png
	height 4.5cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
测试集accuracy。
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
测试集结果。
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
从图中可看出训练集loss和accuracy一直在减小和增加。然而测试集loss出现了一个增加高峰，accuracy出现了一个降低的低谷。我们判断在第3个epo
ch训练出现了过拟合，于是选择了第3次epoch训练出模型进行之后的测试与使用。
\end_layout

\begin_layout Section
系统展示
\begin_inset CommandInset label
LatexCommand label
name "sec:系统展示"

\end_inset


\end_layout

\begin_layout Standard
下面展示某一次系统的使用演示：
\end_layout

\begin_layout Subsection*
获得文档生成
\end_layout

\begin_layout Standard
我们采用
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:特色描述"
plural "false"
caps "false"
noprefix "false"

\end_inset

中的一段话作为原始文本，'ciscn!'作为待水印信息。将原始文本和给定信息输入文档生成模块，得到的文档如下图所示：
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/system-test/generate-img.png
	lyxscale 50
	width 9cm

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
带有水印的文档
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
识别文档照片中的隐藏信息
\end_layout

\begin_layout Standard
打开微信搜索fontDecode小程序，点击中间按钮，你可以选择上传相册中的照片或者临时拍照上传。
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/system-test/wx-index.png
	lyxscale 10
	height 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
主页
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset space \hspace*{}
\length 4cm
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/system-test/cut-image.jpg
	lyxscale 10
	height 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
裁减页
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
fontDecode小程序
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
这里我们选择演示拍照上传。打开系统相机后，拍摄屏幕上含有水印的文档（模拟现实拍照场景）。之后，旋转缩放并切割拍到的照片。点击下方按钮将处理后的图片上传至服务器。
\end_layout

\begin_layout Standard
服务器收到上传图片后，先进行定位、畸变矫正、切割。将切割后的图片规范到224 x 224并进行归一化处理，依次输入进网络。将网络输出的比特串进行BCH解码，即能
得到图片中的隐藏信息。
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/system-test/bi....jpg
	lyxscale 50
	width 30line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
服务器畸变矫正后的图像
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{}
\length 2cm
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/system-test/cut.png
	lyxscale 50
	width 25line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
切割后的图像
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
服务器端处理
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
之后服务器会将解码得到的信息发回给客户端，用户成功获得隐藏信息。
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/system-test/decode-success.jpg
	lyxscale 20
	width 6cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
溯源结果
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Part
作品测试与分析
\end_layout

\begin_layout Standard
本作品可以使用任意多种类的字体作为信息的载体，在本次实现和测试中，为了突出核心想法和测试信息恢复的准确性，选择了两种非常相近的字体。其中一种为华文仿宋，另一种为
微软简仿宋。
\end_layout

\begin_layout Section
测试环境
\end_layout

\begin_layout Subsection
硬件环境
\end_layout

\begin_layout Paragraph*
移动端
\end_layout

\begin_layout Standard
考虑到微信小程序已具备各手机平台适应性，我们仅选用MI 8、Huawei mate20、360 N6、vivoX7作为移动端测试平台，测试其在微信小程序内打开系
统相机、上传图片、裁剪图片和与服务器使用https协议通信的可能性。
\end_layout

\begin_layout Standard
不同手机自带的摄像头在性能方面也有不同，如像素值、对焦能力等。因此我们在采集数据时，混合了四款手机拍照得到的照片进行测试训练。增加神经网络识别不同手机拍摄的图片
的能力。
\end_layout

\begin_layout Paragraph
显示屏
\end_layout

\begin_layout Standard
考虑不同显示屏的分辨率、色差等会对图片产生影响，我们在HP Pavilion 15-au147tx、mac air13.3-inch (1440
 x 900)、mac pro13.3-inch (2560 x 1600)均进行了采样，并在这些显示屏上拍取最终编码后的图片进行解码测试。
\end_layout

\begin_layout Paragraph
服务器端
\end_layout

\begin_layout Standard
服务器端配置为Ubuntu 16.04（64位、1核、内存2G）。服务使用nginx+gunicorn+flask进行部署环境。经测试，该环境足够为小量用户提供可
靠服务。
\end_layout

\begin_layout Subsection
自然环境
\end_layout

\begin_layout Paragraph*
光照环境
\end_layout

\begin_layout Standard
光照条件不同对拍照背景颜色有很大影响。在测试网络识别能力的过程中，我们添加了不同光照条件下拍摄的测试图片，测试网络能否去除光照引起的背景颜色不同的影响。
\end_layout

\begin_layout Paragraph
拍照距离
\end_layout

\begin_layout Standard
由于距离上的差别，拍照所得到的图像在清晰度、摩尔纹等方面有很大的不同。为了测试我们的字体识别网络是否具有处理摩尔纹和清晰度的能力，我们在拍取测试图片时时随机选取
拍照距离。需要注意的是，选取的距离不应过大，使得图片中文字无法识别。也不应过小，使得对整张图片截取不完全，从而无法解码。
\end_layout

\begin_layout Paragraph*
旋转倾斜角度
\end_layout

\begin_layout Standard
为模拟现实情况下拍照环境，我们在拍照时将手机随机进行了小幅度旋转倾斜，以此测试文档分割前图片畸变矫正算法的鲁棒性。
\end_layout

\begin_layout Paragraph
抖动
\end_layout

\begin_layout Standard
测试数据中包含手持拍摄和三脚架固定拍摄数据，以检测网络对模糊图像的识别率。需要注意的是，抖动程度不应太大导致图片文字模糊不清。
\end_layout

\begin_layout Section
测试方案与结果
\end_layout

\begin_layout Standard
分单元分别对字体类型的不可见性、屏摄图片分割准确性和水印信息嵌入与提取进行测试，并对整体流程进行完整测试与分析。
\end_layout

\begin_layout Subsection
功能测试
\end_layout

\begin_layout Standard
我们模拟了数次完整的使用流程，包括文档生成模块测试和信息恢复模块测试。先测试使用给定原始文本和水印内容，使用文档生成模块产生带有水印的文档。再对该文档使用客户端
拍照上传，服务器端进行定位、畸变矫正、字符分割处理后，将字按序输入网络，将输出的比特穿进行BCH解码，就能得到水印信息。下面展示某一次的详细使用流程：
\end_layout

\begin_layout Subsubsection
文档生成模块测试
\end_layout

\begin_layout Standard
我们随机生成20个6字符长的英文字符串。为这20个字符串分别生成不同个数的文档，各文档均能正常生成。各字符串以及对应的文档个数如下:
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="5">
<features booktabs="true" tabularvalignment="middle">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
y)PaE*
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4@P
\backslash
Om
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
&Xo$
\backslash
R
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A[F~Rr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
p'>wSf
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
gIx%c>
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
w^:&`X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
OMqIGc
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
!
\backslash
>hrI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
S5_h|[
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
bnuRXx
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
T}s
\backslash
;$
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
KZ!#v5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
S6Uq7&
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MNZY%S
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
"f:<t@
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
}pOUxu
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
g:aZ!w
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\backslash
(Kp5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
o_6]%(
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
水印信息及对应文档数
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
信息恢复模块测试
\end_layout

\begin_layout Standard
我们的fontDecode小程序中加入了4个试用者，分别是A、B、C、D。让4位试用者使用MI 8、Huawei mate20、360 N6、vivoX7对之前
产生的70张图片拍照上传至服务器提取信息。使用过程和系统展示
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:系统展示"
plural "false"
caps "false"
noprefix "false"

\end_inset

中相同。结果如下：
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="5">
<features booktabs="true" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A（Huawei mate20）
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
B（MI 8）
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
C（360 N6）
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
D（vivo X7）
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
成功恢复文档数
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
67
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
65
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
64
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
60
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
信息恢复效果
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
我们推测还原数目不同与拍摄时抖动程度与手机像素值有关。
\end_layout

\begin_layout Subsection
单元测试
\end_layout

\begin_layout Subsubsection
字体人眼不可识别性测试
\end_layout

\begin_layout Paragraph*
测试方法及标准
\end_layout

\begin_layout Standard
作为文档水印，两种编码字体不能被人眼区分是非常重要的。为了确定我们选定字体的差异是否是难以察觉的，我们使用了主观评测的形式。若两种字体的平均相像评分到达特定阈值
，我们便可以认为选择的两种字体是可以用来编码的。
\end_layout

\begin_layout Paragraph*
测试细节
\end_layout

\begin_layout Standard
我们选定4分作为阈值，并随机抽取两个相同文字让问卷参与者进行辨别（如左图所示）。并且，为了防止参与者中有恶意用户，我们设置了四组验证题（如右图所示）。正常问题中
的两个文字分别为我们选定的两种字体，验证问题中的两个文字则为相同字体。若参与者在四个验证问题中有两个问题回答的评分低于3.5分，我们则认为他是恶意用户，该用户的回
答不计入结果计算。
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/unit-test/normal-question.png
	width 33line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
正常问题
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset space \hspace{}
\length 10line%
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/unit-test/test-question.png
	width 30line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
验证问题
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
问题示例。
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
测试结果
\end_layout

\begin_layout Standard
我们对每个问题的结果（前十题为正常题，后四题为验证题）和去除恶意用户后的总体结果分别进行了统计，统计结果如下图所示。总体上，我们选定的两种字体的平均相像评分达到
了4.097，超过了设定的阈值。
\end_layout

\begin_layout Standard
实际使用过程中，几乎不可能出现两个不同字体的相同文字相邻出现的情况。因此我们的字体不可区分性将表现的更为出色。
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/unit-test/each-result.png
	lyxscale 30
	width 40line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
各题平均分数
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset space \hspace*{}
\length 10line%
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/unit-test/result.png
	lyxscale 30
	width 30line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
各分数段分布
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
问卷调查结果
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
字体识别准确率测试
\end_layout

\begin_layout Paragraph*
测试方法及标准
\begin_inset CommandInset label
LatexCommand label
name "字体识别"

\end_inset


\end_layout

\begin_layout Standard
准备一组屏摄切割后的文字，识别其字体，计算准确率。准确率计算公式如下：
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
M=\frac{P_{1}+P_{2}}{T_{1}+T_{2}}\text{，}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
其中 
\begin_inset Formula $P_{1}$
\end_inset

、
\begin_inset Formula $P_{2}$
\end_inset

 为两种字体分别正确识别的数目，
\begin_inset Formula $T_{1}$
\end_inset

、
\begin_inset Formula $T_{2}$
\end_inset

为两种字体图片的数目。
\end_layout

\begin_layout Standard
屏摄切割后的文字示例如下：
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/1.png

\end_inset


\begin_inset space \hspace{}
\length 1cm
\end_inset


\begin_inset Graphics
	filename figures/2.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/3.png

\end_inset


\begin_inset space \hspace{}
\length 1cm
\end_inset


\begin_inset Graphics
	filename figures/4.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
屏摄切割后的文字图像示例
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph*
测试细节
\end_layout

\begin_layout Standard
我们随机选择了12000张字体图片用做测试。最终的字体识别出错率应低于BCH(127, 50)的BER——10%，即字体准确率应高于90%。
\end_layout

\begin_layout Paragraph
测试结果
\end_layout

\begin_layout Standard
12000张字体图片的识别准确率为92%，在准确率允许范围内。
\end_layout

\begin_layout Subsubsection
文档分割矫正正确性测试
\end_layout

\begin_layout Paragraph*
测试方法及标准
\end_layout

\begin_layout Standard
准备一组（超过 300 张）屏摄文档的照片，用我们的文档分割算法进行分割，计算分割的准确率。
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/before-fix.jpg
	lyxscale 10
	height 6cm

\end_inset


\begin_inset space \hspace*{}
\length 1cm
\end_inset


\begin_inset Graphics
	filename figures/after-fix.jpg
	lyxscale 30
	height 6cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
分割前后图像示例
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph*
测试细节
\end_layout

\begin_layout Standard
我们对不同旋转角度的图片进行测试，也对不同距离进行了拍照测试。
\end_layout

\begin_layout Paragraph
测试结果
\end_layout

\begin_layout Standard
旋转角度小于等于正负10度、不遮挡边框的情况下，文档均能被正常分割矫正。
\end_layout

\begin_layout Subsubsection
文档解码正确率测试
\end_layout

\begin_layout Paragraph
测试方法及标准
\end_layout

\begin_layout Standard
随机生成数据（`0/1’比特串），并对数据进行BCH编码。利用编码后的比特串产生隐写文档。对文档进行拍照、畸变矫正、切分后，使用
\begin_inset CommandInset ref
LatexCommand ref
reference "字体识别"
plural "false"
caps "false"
noprefix "false"

\end_inset

中达到要求的网络提取出信息，将提取信息与文档中真实隐写信息比对，计算识别准确率。最终将提取信息进行BCH解码，观察解码后的数据与一开始随机生成的数据是否相同。
\end_layout

\begin_layout Paragraph*
测试细节
\end_layout

\begin_layout Standard
提取信息与文档中真实隐写信息比对的准确率应高于90%才能正确解码。我们随机产生了三组数据（`0/1'比特串），对每组数据产生了12份隐写文档，每份文档中含有14
4个文字。
\end_layout

\begin_layout Paragraph*
测试结果
\end_layout

\begin_layout Standard
结果如下表所示：
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
文档解码正确率结果
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="4">
<features booktabs="true" tabularvalignment="middle" tabularwidth="70line%">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row interlinespace="0.1cm">
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
数据1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
数据2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
数据3
\end_layout

\end_inset
</cell>
</row>
<row interlinespace="0.1cm">
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
平均识别率
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
93.2%
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
95%
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
92.1%
\end_layout

\end_inset
</cell>
</row>
<row interlinespace="0.1cm">
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
正确解码的文档数
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
所有文档中只有两份文档识别正确率为88%，无法被正确BCH解码。我们的系统正确提取隐写信息的概率为93.75%
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Part
创新性说明
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setcounter{section}{0}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
本作品创新性地将字体作为信息的载体，利用深度学习技术灵活强大的模式识别能力对不同的字体进行精准识别，结合纠错编码，保证了水印信息的无损恢复。从而实现了一种能抵抗
屏摄过程的文档水印技术。
\end_layout

\begin_layout Standard
本技术具有如下特点：
\end_layout

\begin_layout Enumerate
强可定制性
\end_layout

\begin_deeper
\begin_layout Standard
本作品提出的技术可适用于任意字体类型、任意字体数目，因此具有很高的可定制性，可以适应于多种文档格式，文字类型等需求，具有广泛的应用价值。
\end_layout

\end_deeper
\begin_layout Enumerate
高不可见性
\end_layout

\begin_deeper
\begin_layout Standard
实验表明，本作品提出的技术在肉眼难以区分的前提下，字体识别准确率也能够超过 90%，配合纠错编码，可以无损恢复水印信息。因此使用该技术不会对文档本身造成肉眼可见
的失真，也不会影响文档的正常阅读和使用。
\end_layout

\end_deeper
\begin_layout Enumerate
高鲁棒性
\end_layout

\begin_deeper
\begin_layout Standard
在纸质、电子文档的传播过程中可能经过打印、扫描、屏幕显示、拍照等多种变化过程，在这些过程中很容易在文档中留下噪点、污点。传统的分析方法集中于在文档中使用像素点记
录信息，很容易受到噪点、污点的影响，导致信息丢失、出错。本作品使用字体作为信息的载体，有效避免了信息被污点、噪点干扰的问题。
\end_layout

\begin_layout Standard
本作品从两个方面提高了水印提取的准确性。一方面，使用字体作为信息载体，文档的水印信息不再容易受到污点、噪点、甚至屏幕拍照出现的摩尔纹的影响；另一方面，深度学习技
术使得字体识别更为灵活准确。
\end_layout

\end_deeper
\begin_layout Enumerate
大信息容量
\end_layout

\begin_deeper
\begin_layout Standard
虽然在实现和测试时我们只使用了两种字体，但实际上，只要不影响文档阅读效果，可以使用更多字体，从而增加每个文字信息载荷，进而提高同样长度的文档对应的水印容量。
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Part
总结
\end_layout

\begin_layout Standard
多媒体技术的发展对泄密溯源技术带来新的挑战。随着智能手机的普及，各类重要的机密文件的泄露事件出现频繁。目前各种文件几乎都以电子文档的形式存储，文档显示在电子屏幕
上时，信息窃取者通过手机拍摄照片获取文档的信息变得十分容易，而这种文档泄密事件的溯源却相当困难。屏摄后的文档图片会出现大量的摩尔纹、噪点、失真等情况，传统的文档
水印技术无法在屏摄处理后恢复原始的水印信息。因此需要能够抗屏摄的文档水印技术。
\end_layout

\begin_layout Standard
我们提出了在中文文档中实现高不可见性、高鲁棒性水印的关键技术，并实现了一个原型系统来演示其效果。我们通过众包技术选取了人眼不可区分的字体作为编码信息的载体，通过
BCH(127,50)具有纠错能力的编码方案将文档中嵌入水印信息。水印提取过程中，使用畸变矫正算法来处理屏摄后的图片，利用OCR技术裁剪获取文字。利用神经网络识
别字体种类，将提取出的信息利用BCH(127,50)解码还原出原始的水印信息。通过在神经网络的训练过程中，我们拍摄了大量的不同环境的训练集来提高网络的泛化能力，
最后通过单元测试验证了网络的高识别准确率和提取信息的正确性。演示系统基于屏摄文档，但可以扩展到其他形式的文档，具有普遍应用的潜力。
\end_layout

\begin_layout Standard
未来我们的抗屏摄文档水印技术还可以利用生成对抗网络在字体选择这一部分进行优化：现在我们的原型系统仅支持特定的字体。当用户任意给定字体时，使用众包技术为其选择相像
字体显然是不现实的（周期太长、无法支持大规模使用）。针对这个问题，我们可以使用生成对抗模型，对任意给定的字体都生成一种与其相似的、我们的网络可以识别的字体。在文
档篇幅较小的情况使用`0'/`1'编码无法嵌入足够的水印信息，对于这个问题，可以利用对抗生成网络产生大量的相似字体，从而提高每一个可以编码的信息，依然可以实现水
印信息的嵌入。
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintAll"
bibfiles "bib"
options "bibtotoc,plain"

\end_inset


\end_layout

\end_body
\end_document
